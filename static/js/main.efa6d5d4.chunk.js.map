{"version":3,"sources":["components/Scaffold.jsx","components/Description.jsx","pages/mobx-test/basic/index.jsx","pages/mobx-test/deep-watch/store.js","pages/mobx-test/deep-watch/Form.jsx","pages/mobx-test/deep-watch/index.jsx","pages/mobx-test/dynamic-object/store.js","pages/mobx-test/dynamic-object/Form.jsx","pages/mobx-test/dynamic-object/index.jsx","pages/mobx-test/index.jsx","pages/redux-test/basic/index.jsx","pages/redux-test/full-set/actions/index.js","pages/redux-test/full-set/components/Link.jsx","pages/redux-test/full-set/containers/FilterLink.jsx","pages/redux-test/full-set/components/Footer.jsx","pages/redux-test/full-set/containers/AddTodo.jsx","pages/redux-test/full-set/components/Todo.jsx","pages/redux-test/full-set/components/TodoList.jsx","pages/redux-test/full-set/containers/VisibleTodoList.jsx","pages/redux-test/full-set/components/App.jsx","pages/redux-test/full-set/reducers/todos.js","pages/redux-test/full-set/reducers/visibilityFilter.js","pages/redux-test/full-set/reducers/index.js","pages/redux-test/full-set/index.jsx","pages/redux-test/index.jsx","pages/home/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CustomLink","_ref","to","children","exact","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","path","_ref2","match","react_router_dom","assign","es_button","type","style","marginRight","Scaffold","_ref3","config","_ref3$prefix","prefix","map","_ref4","idx","name","key","_ref5","component","Title","Paragraph","Description","title","typography","level","store","basic_class","_class","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","createClass","get","count","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","action","_this","Basic","ref","useRef","reaction","current","innerHTML","Fragment","Description_Description","basic_Paragraph","onClick","addcount","store_class","store_descriptor","store_descriptor2","_descriptor3","data","username","password","str","_this2","Form","inject","observer","_ref$store","updateUsername","updatePassword","es_form","Item","label","input","value","onChange","e","target","DeepWatch","mobx_react_module","stores","dynamic_object_store_class","dynamic_object_store_descriptor","dynamic_object_store_descriptor2","store_descriptor3","_descriptor4","concat","maxKey","updateItem","addItem","keys","DynamicObject","Form_Form","MobxTest","Scaffold_Scaffold","createStore","state","subscribe","getState","redux_test_basic_Paragraph","dispatch","nextTodoId","VisibilityFilters","Link","active","marginLeft","connect","ownProps","filter","visibilityFilter","Footer","FilterLink","Search","_useState","useState","_useState2","slicedToArray","setValue","enterButton","onSearch","trim","id","text","Todo","completed","textDecoration","TodoList","todos","toggleTodo","todo","components_Todo","getVisibleTodos","t","Error","App","containers_AddTodo","VisibleTodoList","components_Footer","arguments","length","undefined","toConsumableArray","objectSpread","combineReducers","FullSet","es","reducers","components_App","ReduxTest","Home","home_Title","home_Paragraph","Pages","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efa6d5d4.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink, HashRouter as Router, Route } from 'react-router-dom'\nimport { Button } from 'antd'\n\nfunction CustomLink({ to, children, exact, ...rest }) {\n  return (\n    <Route\n      path={to}\n      exact={exact}\n      children={({ match }) => (\n        <NavLink to={to} {...rest}>\n          <Button type={match && 'primary'} style={{ marginRight: 8 }}>\n            {children}\n          </Button>\n        </NavLink>\n      )}\n    />\n  )\n}\n\n/**\n *\n * @param {string} prefix\n * @param {Array<{\n *   name: string\n *   path: string\n *   exact: boolean\n *   component: React.ReactNode\n * }>} config\n * @returns React.ReactNode\n */\nexport const Scaffold = ({ config, prefix = '' }) => {\n  return (\n    <Router>\n      <header>\n        {config.map(({ name, exact, path: to }, idx) => (\n          <CustomLink key={idx} {...{ exact, to: prefix + to }}>\n            {name}\n          </CustomLink>\n        ))}\n      </header>\n      <content>\n        {config.map(({ exact, component, path }, idx) => (\n          <Route {...{ exact, component, path: prefix + path }} key={idx} />\n        ))}\n      </content>\n    </Router>\n  )\n}\n","import React from 'react'\nimport { Typography } from 'antd'\n\nconst { Title, Paragraph } = Typography\n\nexport const Description = ({ title, children }) => {\n  return (\n    <Typography>\n      <Title level={1}>{title}</Title>\n      <Paragraph>{children}</Paragraph>\n    </Typography>\n  )\n}\n","import React, { useRef } from 'react'\nimport { observable, computed, action, reaction } from 'mobx'\nimport { Typography, Button } from 'antd'\nimport { Description } from '@/components'\n\nconst { Paragraph } = Typography\n\nconst store = new (class {\n  @observable store = {\n    count: 0\n  }\n  @computed get count() {\n    return this.store.count\n  }\n  @action addcount = () => {\n    this.store.count++\n  }\n})()\n\nexport const Basic = () => {\n  const ref = useRef(null)\n  reaction(\n    () => store.count,\n    (count, reaction) => {\n      ref.current && (ref.current.innerHTML = count)\n      // reaction.dispose() // 只响应一次\n    }\n  )\n  const addcount = () => {\n    store.addcount()\n  }\n  return (\n    <>\n      <Description title=\"Basic Usage\">\n        <Paragraph>Basic Usage with native js and html.</Paragraph>\n        <ul>\n          <li>\n            count: <span ref={ref}>{store.count}</span>\n          </li>\n        </ul>\n      </Description>\n      <Button onClick={addcount}>Add count</Button>\n    </>\n  )\n}\n","import { observable, computed, action } from 'mobx'\n\nexport const store = new (class {\n  @observable data = [\n    {\n      data: {\n        data: [\n          {\n            username: '123',\n            password: '456'\n          }\n        ]\n      }\n    }\n  ]\n\n  @computed get username() {\n    return this.data[0].data.data[0].username\n  }\n\n  @computed get password() {\n    return this.data[0].data.data[0].password\n  }\n\n  @action updateUsername = (str) => {\n    this.data[0].data.data[0].username = str\n  }\n\n  @action updatePassword = (str) => {\n    this.data[0].data.data[0].password = str\n  }\n})()\n","import React from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Input, Form as AntForm } from 'antd'\n\nconst FormC = ({\n  store: { username, password, updateUsername, updatePassword }\n}) => {\n  return (\n    <AntForm>\n      <AntForm.Item label=\"username\">\n        <Input\n          value={username}\n          onChange={(e) => updateUsername(e.target.value)}\n        />\n      </AntForm.Item>\n      <AntForm.Item label=\"password\">\n        <Input\n          value={password}\n          onChange={(e) => updatePassword(e.target.value)}\n        />\n      </AntForm.Item>\n    </AntForm>\n  )\n}\n\nexport const Form = inject('store')(observer(FormC))\n","import React from 'react'\nimport { Provider } from 'mobx-react'\nimport { Description } from '@/components'\nimport * as stores from './store'\nimport { Form } from './Form'\n\nexport function DeepWatch() {\n  return (\n    <Provider {...stores}>\n      <>\n        <Description title=\"Deep Watch\">Observe deep neseted data.</Description>\n        <Form />\n      </>\n    </Provider>\n  )\n}\n","import { observable, computed, action } from 'mobx'\n\nexport const store = new (class {\n  @observable maxKey = 0\n  @observable data = {\n    username: '123',\n    password: '456'\n  }\n\n  @action updateItem = (key, value) => {\n    this.data[key] = value\n  }\n\n  @action addItem = () => {\n    this.data[`new ${++this.maxKey}`] = ''\n  }\n})()\n","import React from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Input, Form as AntForm, Button } from 'antd'\n\nconst FormC = ({ store: { data, updateItem, maxKey, addItem } }) => {\n  return (\n    <AntForm>\n      {Object.keys(data).map((key) => (\n        <AntForm.Item label={key} key={key}>\n          <Input\n            value={data[key]}\n            onChange={(e) => updateItem(key, e.target.value)}\n          />\n        </AntForm.Item>\n      ))}\n      <AntForm.Item label=\"add\">\n        <Button onClick={addItem}>new {maxKey + 1}</Button>\n      </AntForm.Item>\n    </AntForm>\n  )\n}\n\nexport const Form = inject('store')(observer(FormC))\n","import React from 'react'\nimport { Provider } from 'mobx-react'\nimport { Description } from '@/components'\nimport * as stores from './store'\nimport { Form } from './Form'\n\nexport function DynamicObject() {\n  return (\n    <Provider {...stores}>\n      <>\n        <Description title=\"Dynamic Object\">\n          Observe a object with dynamic key.\n        </Description>\n        <Form />\n      </>\n    </Provider>\n  )\n}\n","import React from 'react'\nimport { Scaffold } from '@/components'\nimport { Basic } from './basic'\nimport { DeepWatch } from './deep-watch'\nimport { DynamicObject } from './dynamic-object'\n\nexport const MobxTest = () => {\n  const config = [\n    {\n      name: 'Basic',\n      path: '/',\n      component: Basic,\n      exact: true\n    },\n    {\n      name: 'Deep Watch',\n      path: '/deep-watch',\n      component: DeepWatch\n    },\n    {\n      name: 'Dynamic Object',\n      path: '/dynamic-object',\n      component: DynamicObject\n    }\n  ]\n  return <Scaffold prefix=\"/mobx-test\" config={config} />\n}\n","import React, { useRef } from 'react'\nimport { createStore } from 'redux'\nimport { Typography, Button } from 'antd'\nimport { Description } from '@/components'\n\nconst { Paragraph } = Typography\n\nfunction counter(state, action) {\n  if (typeof state === 'undefined') {\n    return 0\n  }\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1\n    case 'DECREMENT':\n      return state - 1\n    default:\n      return state\n  }\n}\n\nconst store = createStore(counter)\n\nexport const Basic = () => {\n  const ref = useRef(null)\n  const render = () => {\n    ref.current && (ref.current.innerHTML = store.getState())\n  }\n  store.subscribe(render)\n  const addCount = () => {\n    store.dispatch({ type: 'INCREMENT' })\n  }\n  const reduceCount = () => {\n    store.dispatch({ type: 'DECREMENT' })\n  }\n  return (\n    <>\n      <Description title=\"Basic Usage\">\n        <Paragraph>Basic Usage with native js and html.</Paragraph>\n        <ul>\n          <li>\n            count: <span ref={ref}>{store.getState()}</span>\n          </li>\n        </ul>\n      </Description>\n      <Button onClick={addCount}>Add count</Button>\n      <p />\n      <Button onClick={reduceCount}>Reduce count</Button>\n    </>\n  )\n}\n","let nextTodoId = 0\nexport const addTodo = (text) => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text\n})\n\nexport const setVisibilityFilter = (filter) => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = (id) => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'antd'\n\nconst Link = ({ active, children, onClick }) => (\n  <Button\n    onClick={onClick}\n    type={active ? 'primary' : ''}\n    style={{\n      marginLeft: 4\n    }}\n  >\n    {children}\n  </Button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Footer = () => (\n  <>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </>\n)\n\nexport default Footer\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Input } from 'antd'\nimport { addTodo } from '../actions'\n\nconst { Search } = Input\n\nconst AddTodo = ({ dispatch }) => {\n  const [value, setValue] = useState('')\n  return (\n    <Search\n      enterButton=\"Add Todo\"\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      onSearch={() => {\n        if (!value.trim()) {\n          return\n        }\n        dispatch(addTodo(value))\n        setValue('')\n      }}\n    />\n  )\n}\n\nexport default connect()(AddTodo)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n  </li>\n)\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Todo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Typography } from 'antd'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <Typography>\n    <ul>\n      {todos.map((todo) => (\n        <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n      ))}\n    </ul>\n  </Typography>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList\n","import { connect } from 'react-redux'\nimport { toggleTodo } from '../actions'\nimport TodoList from '../components/TodoList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter((t) => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter((t) => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleTodo: (id) => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n","import React from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodo'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst App = () => (\n  <>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </>\n)\n\nexport default App\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ]\n    case 'TOGGLE_TODO':\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      )\n    default:\n      return state\n  }\n}\n\nexport default todos\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})\n","import React from 'react'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { Description } from '@/components'\nimport App from './components/App'\nimport reducers from './reducers'\n\nexport const FullSet = () => {\n  return (\n    <>\n      <Description title=\"Full Set\">\n        Redux full example with react. Use createStore, combineReducers, ...\n      </Description>\n      <Provider store={createStore(reducers)}>\n        <App />\n      </Provider>\n    </>\n  )\n}\n","import React from 'react'\nimport { Scaffold } from '@/components'\nimport { Basic } from './basic'\nimport { FullSet } from './full-set'\n\nexport const ReduxTest = () => {\n  const config = [\n    {\n      name: 'Basic',\n      path: '/',\n      component: Basic,\n      exact: true\n    },\n    {\n      name: 'Full Set',\n      path: '/full-set',\n      component: FullSet\n    }\n  ]\n  return <Scaffold prefix=\"/redux-test\" config={config} />\n}\n","import React from 'react'\nimport { Typography } from 'antd'\n\nconst { Title, Paragraph } = Typography\n\nexport const Home = () => {\n  return (\n    <Typography>\n      <Title>React</Title>\n      <Paragraph>A JavaScript library for building user interfaces</Paragraph>\n      <Title level={2}>Declarative</Title>\n      <Paragraph>\n        React makes it painless to create interactive UIs. Design simple views\n        for each state in your application, and React will efficiently update\n        and render just the right components when your data changes.\n      </Paragraph>\n      <Paragraph>\n        Declarative views make your code more predictable and easier to debug.\n      </Paragraph>\n      <Title level={2}>Component-Based</Title>\n      <Paragraph>\n        Build encapsulated components that manage their own state, then compose\n        them to make complex UIs.\n      </Paragraph>\n      <Paragraph>\n        Since component logic is written in JavaScript instead of templates, you\n        can easily pass rich data through your app and keep state out of the\n        DOM.\n      </Paragraph>\n      <Title level={2}>Learn Once, Write Anywhere</Title>\n      <Paragraph>\n        We don’t make assumptions about the rest of your technology stack, so\n        you can develop new features in React without rewriting existing code.\n      </Paragraph>\n      <Paragraph>\n        React can also render on the server using Node and power mobile apps\n        using React Native.\n      </Paragraph>\n    </Typography>\n  )\n}\n","import React from 'react'\nimport { Scaffold } from '@/components'\nimport * as Pages from './pages'\n\nconst App = () => {\n  const config = [\n    {\n      name: 'Home',\n      path: '/',\n      component: Pages.Home,\n      exact: true\n    },\n    {\n      name: 'Mobx Test',\n      path: '/mobx-test',\n      component: Pages.MobxTest\n    },\n    {\n      name: 'Redux Test',\n      path: '/redux-test',\n      component: Pages.ReduxTest\n    }\n  ]\n  return (\n    <main>\n      <Scaffold config={config} />\n    </main>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}